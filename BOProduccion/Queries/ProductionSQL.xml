<?xml version="1.0" encoding="utf-8" ?>
<Queries>
  <GetWorkOrder>
    SELECT TOP 1  DocEntry,
    DocNum,
    ItemCode,
    (SELECT TOP 1 U_BO_SNPT FROM [@BOPRODP]) AS 'SNPT'
    FROM OWOR
    WHERE UserSign = '%UserSign%' AND U_BO_TO = 'T'
    ORDER BY DocEntry DESC
  </GetWorkOrder>

  <GetWorkOrderLine>
    SELECT LineNum,
    VisOrder,
    ItemCode,
    PlannedQty,
    wareHouse,
    (SELECT TOP 1 U_BO_SNPS FROM [@BOPRODP]) AS 'SNPS'
    FROM WOR1 WHERE DocEntry = '%DocEntry%'
  </GetWorkOrderLine>
  
  <GetWorkOrderExternalService>
    SELECT U_BO_OPP AS 'WO', U_BO_PosId AS 'PosId' FROM OWOR WHERE DocEntry = '%DocEntry%'
  </GetWorkOrderExternalService>

  <SearchBOM>
    SELECT Code FROM OITT WHERE Code = '%Item%'
  </SearchBOM>

  <GetNumberSerieActive>
    
    SELECT TOP 1 T0.U_BO_SNPT AS 'Code_SNPT',
           T1.SeriesName AS 'Name_SNPT',
           
           T0.U_BO_SNPS AS 'Code_SNPS',
           T2.SeriesName AS 'Name_SNPS',
           
           T0.U_BO_SNEM AS 'Code_SNEM',
           T3.SeriesName AS 'Name_SNEM',

           T0.U_BO_SNSM AS 'Code_SNSM',
           T3.SeriesName AS 'Name_SNSM',
           
           T0.U_BO_AcctCom AS 'Cuenta_Compensacion'
           
           
    FROM [@BOPRODP] T0 LEFT JOIN NNM1 T1 ON T0.U_BO_SNPT=T1.Series AND  T1.ObjectCode = '202'
                       LEFT JOIN NNM1 T2 ON T0.U_BO_SNPS=T2.Series AND  T2.ObjectCode = '202'
                       LEFT JOIN NNM1 T3 ON T0.U_BO_SNEM=T2.Series AND  T2.ObjectCode = '59'
                       LEFT JOIN NNM1 T4 ON T0.U_BO_SNSM=T2.Series AND  T2.ObjectCode = '60'
                       
  </GetNumberSerieActive>

  <GetNumberSerieSAPWorkOrder>
    SELECT Series AS 'Code_SNPSAP',
           SeriesName AS 'Name_SNPSAP'
    FROM NNM1 WHERE ObjectCode = '202'
  </GetNumberSerieSAPWorkOrder>

  <GetNumberSerieSAPGoodsReceipt>
    SELECT Series AS 'Code_SNEM',
           SeriesName AS 'Name_SNEM'
    FROM NNM1 WHERE ObjectCode = '59'
  </GetNumberSerieSAPGoodsReceipt>

  <GetNumberSerieSAPGoodsIssue>
    SELECT Series AS 'Code_SNSM',
           SeriesName AS 'Name_SNSM'
    FROM NNM1 WHERE ObjectCode = '60'
  </GetNumberSerieSAPGoodsIssue>

  <GetParametersProduction>
    select Code from [@BOPRODP]
  </GetParametersProduction>

  <SerachNextCode>
    SELECT RIGHT('0000000000' + Ltrim(Rtrim(COUNT(CODE)+1)),10) AS 'ID' FROM [@BOPRODP]
  </SerachNextCode>

  <GetWorkOrders>
    EXEC [dbo].[BO_OrdenesProduccion] '%ItemCode%'
  </GetWorkOrders>

  <GetDocEntryWorkOrder>
    SELECT DocEntry AS 'DocEntry' FROM OWOR WHERE DocNum = '%DocNum%' AND Series = (SELECT TOP 1 U_BO_SNPS FROM [@BOPRODP])
  </GetDocEntryWorkOrder>

  <GetMPE>
    SELECT TOP 100 A.DocEntry,
    (SELECT TOP 1 DocNum FROM OWOR WHERE DocEntry ='%DocEntryOPS%') AS 'OF',
    A.DocNum,
    A.DocDate,
    B.ItemCode,
    b.Dscription,
    B.Quantity,
    B.WhsCode
    FROM OIGE A LEFT JOIN IGE1 B ON A.DocEntry=B.DocEntry --IGN1
    WHERE BaseRef = (SELECT TOP 1 DocNum FROM OWOR WHERE DocEntry ='%DocEntryOPS%')
  </GetMPE>

  <DeleteProcedure>
    IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = '%sNameProcedure%')
    BEGIN
    DROP PROCEDURE %sNameProcedure%
    END
  </DeleteProcedure>

  <ProcedureWorkOrder>    

    CREATE PROCEDURE [dbo].[BO_OrdenesProduccion] 
	(
		@DocNumOPT AS NVARCHAR(100)
	)

    AS

    BEGIN

    ------------------------------------- Elimina las tablas temporales -------------------

		IF EXISTS (SELECT 1 FROM tempdb.sys.objects WHERE OBJECT_ID=OBJECT_ID('tempdb..#OrdenesdeProduccion'))
		BEGIN
		DROP TABLE #OrdenesdeProduccion
		END

		IF EXISTS (SELECT 1 FROM tempdb.sys.objects WHERE OBJECT_ID=OBJECT_ID('tempdb..##ControlOrdenesdeProduccionFinal'))
		BEGIN
			DROP TABLE #ControlOrdenesdeProduccionFinal
		END
		
		IF EXISTS (SELECT 1 FROM tempdb.sys.objects WHERE OBJECT_ID=OBJECT_ID('tempdb..##ControlOrdenesdeProduccionFinalConFiltro'))
		BEGIN
			DROP TABLE #ControlOrdenesdeProduccionFinalConFiltro
		END

		IF EXISTS (SELECT 1 FROM tempdb.sys.objects WHERE OBJECT_ID=OBJECT_ID('tempdb..#OrdenesProduccionPT'))
		BEGIN
		DROP TABLE #OrdenesProduccionPT
		END

		IF EXISTS (SELECT 1 FROM tempdb.sys.objects WHERE OBJECT_ID=OBJECT_ID('tempdb..#OrdenesProduccionPS'))
		BEGIN
		DROP TABLE #OrdenesProduccionPS
		END

    ------------------------------------- Creacion las tablas temporales -------------------

    CREATE TABLE #ControlOrdenesdeProduccion
    (
    DocEntry INT,
    DocNumOPT INT,
    StatusOPT NVARCHAR(50),
    imgStatus NVARCHAR(254),
    ItemCodeOPT NVARCHAR(50),
    ItemNameOPT NVARCHAR(250),
    WarehouseOPT NVARCHAR(10),
    PlannedQtyOPT DECIMAL(19,2),
    ReceivedQtyOPT DECIMAL(19,2),
    QuantityCOLOROPT NVARCHAR(10),
    --- Detalle -----------
    PosIdOPS NVARCHAR(5),
    EtapaProduccion NVARCHAR(200),
    StatusOPS NVARCHAR(50),
    DocEntryOPS NVARCHAR(50),
    DocNumOPS NVARCHAR(50),
    ItemCodeOPS NVARCHAR(50),
    ItemNameOPS NVARCHAR(250),
    WarehouseOPS NVARCHAR(10),
    PlannedQtyOPS DECIMAL(19,2),
    ReceivedQtyOPS DECIMAL(19,2),
    QuantityCOLOROPS NVARCHAR(10),
    imgMPDes NVARCHAR(254)

    )

    CREATE TABLE #OrdenesProduccionPT
    (
    DocEntry INT,
    DocNumOPT INT,
    StatusOPT NVARCHAR(50),
    imgStatus NVARCHAR(254),
    ItemCodeOPT NVARCHAR(50),
    ItemNameOPT NVARCHAR(250),
    WarehouseOPT NVARCHAR(10),
    PlannedQtyOPT DECIMAL(19,2),
    ReceivedQtyOPT DECIMAL(19,2),
    ItemCodeOPS NVARCHAR(50),
	ItemNameOPS NVARCHAR(250),
	WarehouseOPS NVARCHAR(10),
	PlannedQtyOPS DECIMAL(19,2),
	ReceivedQtyOPS DECIMAL(19,2),
    EtapaProduccion NVARCHAR(200),
    LineNum NVARCHAR(5)
    )

    CREATE TABLE #OrdenesProduccionPS
    (
    OPP NVARCHAR(50),
    PosId NVARCHAR(10),
    DocEntry INT,
    DocNumOPS INT,
    StatusOPS NVARCHAR(50),
    imgStatus NVARCHAR(254),
    ItemCodeOPS NVARCHAR(50),
    ItemNameOPS NVARCHAR(250),
    WarehouseOPS NVARCHAR(10),
    PlannedQtyOPS DECIMAL(19,2),
    ReceivedQtyOPS DECIMAL(19,2),
    imgMPDes NVARCHAR(254)
    )

    ---------------------------------------- Busca las ordenes de produccion de Producto terminado -------------------

    INSERT INTO #ControlOrdenesdeProduccion

    SELECT A.DocEntry AS 'DocEntry',
			A.U_BO_OPP AS 'DocNumOPT',

			CASE WHEN A.[Status] = 'P' THEN 'Planificado'
			WHEN A.[Status] = 'R' THEN 'Liberado'
			WHEN A.[Status] = 'L' THEN 'Cerrado'
			WHEN A.[Status] = 'C' THEN 'Cancelado'
			ELSE '' END AS 'StatusOPT',

			CASE WHEN A.[Status] = 'P' THEN 'C:\Program Files\SAP\SAP Business One\AddOns\BasisOne\Basis One 10.2.0.35\X64Client\BOProduction\Images\imgPlanificado.bmp'
			WHEN A.[Status] = 'R' THEN 'C:\Program Files\SAP\SAP Business One\AddOns\BasisOne\Basis One 10.2.0.35\X64Client\BOProduction\Images\imgLiberado.bmp'
			WHEN A.[Status] = 'L' THEN 'C:\Program Files\SAP\SAP Business One\AddOns\BasisOne\Basis One 10.2.0.35\X64Client\BOProduction\Images\imgCerrado.bmp'
			WHEN A.[Status] = 'C' THEN 'C:\Program Files\SAP\SAP Business One\AddOns\BasisOne\Basis One 10.2.0.35\X64Client\BOProduction\Images\imgCancelado.bmp'
			ELSE '' END AS 'imgStatus',

			A.ItemCode AS 'ItemCodeOPT',
			B.ItemName AS 'ItemNameOPT',
			A.Warehouse AS 'WarehouseOPT',
			CAST(A.PlannedQty AS DECIMAL(19,2)) AS 'PlannedQtyOPT',

			(SELECT COALESCE(SUM(CAST(T0.Quantity AS DECIMAL(19,2))),0) FROM IGN1 T0 WHERE T0.BaseRef = A.DocNum AND T0.ItemCode=A.ItemCode AND T0.WhsCode = A.Warehouse ) AS 'ReceivedQtyOPT',

			NULL AS 'QuantityCOLOROPT',

			------------ Detalle -------------------------

			c.VisOrder AS 'PosIdOPS',

			c.VisOrder+1 AS 'EtapaProduccion',

			CASE WHEN A.[Status] = 'P' THEN 'Planificado'
					WHEN A.[Status] = 'R' THEN 'Liberado'
					WHEN A.[Status] = 'L' THEN 'Cerrado'
					WHEN A.[Status] = 'C' THEN 'Cancelado'
			ELSE '' END AS 'StatusOPT',

			NULL AS 'DocEntryOPS',

			NULL AS 'DocNumOPS',

			C.ItemCode AS 'ItemCodePS',
			C.ItemName AS 'ItemNameOPS', 
			C.wareHouse AS 'WarehouseOPS',
			C.PlannedQty AS 'PlannedQtyOPS',
			c.IssuedQty AS 'ReceivedQtyOPS',
			NULL AS 'QuantityCOLOROPS',
			NULL AS 'imgMPDes'

    FROM OWOR A LEFT JOIN OITM B ON A.ItemCode=B.ItemCode
				LEFT JOIN WOR1 C ON A.DocEntry=C.DocEntry
				LEFT JOIN ORST D ON C.StageId=D.AbsEntry

    WHERE A.U_BO_TO = 'T' AND (A.Series = (SELECT TOP 1 U_BO_SNPT FROM [@BOPRODP] ) OR A.Series = '127') AND C.IssueType != 'B' AND A.U_BO_OPP IS NOT NULL

    group by  A.DocEntry, a.DocNum, A.[Status], A.ItemCode, B.ItemName,  A.Warehouse, A.PlannedQty, C.ItemCode, D.Code, C.VisOrder, C.ItemName, C.wareHouse, C.PlannedQty, C.IssuedQty, C.LineNum, A.U_BO_OPP 
    order by a.U_BO_OPP, c.LineNum

    ---------------------------------------- Busca las ordenes de produccion de Producto Semielaborado ---------------

    INSERT INTO #ControlOrdenesdeProduccion

    SELECT A.DocEntry AS 'DocEntry', 
		   A.U_BO_OPP AS 'DocNumOPT',
		   NULL AS 'StatusOPT',
		   NULL AS 'imgStatus',
		   NULL AS 'ItemCodeOPT',
		   NULL AS 'ItemNameOPT',
		   NULL AS 'WarehouseOPT',
		   NULL AS 'PlannedQtyOPT',
		   NULL AS 'ReceivedQtyOPT',
		   NULL AS 'QuantityCOLOROPT',
		   ------------- Detalle -----------
		   A.U_BO_PosId AS 'PosId',
		   A.U_BO_PosId AS 'EtapaProduccion',
		   
		   CASE WHEN A.[Status] = 'P' THEN 'Planificado'
				WHEN A.[Status] = 'R' THEN 'Liberado'
				WHEN A.[Status] = 'L' THEN 'Cerrado'
				WHEN A.[Status] = 'C' THEN 'Cancelado'
				ELSE '' END AS 'StatusOPS',

		    A.DocEntry AS 'DocEntry',
			A.DocNum AS 'DocNumOPS',
						
			A.ItemCode AS 'ItemCodeOPS',
			B.ItemName AS 'ItemNameOPS',
			A.Warehouse AS 'WarehouseOPS',
			A.PlannedQty AS 'PlannedQtyOPS',

			(SELECT COALESCE(SUM(T0.Quantity),0) FROM IGN1 T0 WHERE T0.BaseRef = A.DocNum AND T0.ItemCode=A.ItemCode AND T0.WhsCode = A.Warehouse ) AS 'ReceivedQtyOPS',
			
			NULL AS 'QuantityCOLOROPS',

		NULL AS 'imgStatus'


    FROM OWOR A LEFT JOIN OITM B ON A.ItemCode=B.ItemCode 

    WHERE A.U_BO_TO = 'S' AND (A.Series = (SELECT TOP 1 U_BO_SNPS FROM [@BOPRODP] ) OR A.Series = '128') AND A.U_BO_OPP IS NOT NULL AND A.[Status] != 'C'

	-------------------------------------- Insercion informacion tabla temporal Final ---------------------------------------
	
	IF(@DocNumOPT = '')
		BEGIN

			SELECT * 
			INTO #ControlOrdenesdeProduccionFinal
			FROM #ControlOrdenesdeProduccion
			ORDER BY DocNumOPT, EtapaProduccion	
		
		END
	ELSE
		BEGIN

			SELECT * 
			INTO #ControlOrdenesdeProduccionFinalConFiltro
			FROM #ControlOrdenesdeProduccion WHERE DocNumOPT = @DocNumOPT
			ORDER BY DocNumOPT, EtapaProduccion	
			
		END

    ---------------------------------------- Actualizacion informacion tabla temporal -------------------

	IF(@DocNumOPT = '')
		BEGIN
			    UPDATE #ControlOrdenesdeProduccionFinal
				SET DocNumOPT = NULL
				WHERE PosIdOPS NOT IN ('0')

				UPDATE #ControlOrdenesdeProduccionFinal
				SET StatusOPS = NULL,
					DocEntryOPS = NULL,
					DocNumOPS = NULL,
					ItemCodeOPS = NULL,
					ItemNameOPS = NULL,
					WarehouseOPS = NULL,
					PlannedQtyOPS = NULL,
					ReceivedQtyOPS = NULL,
					QuantityCOLOROPS = NULL
				WHERE PosIdOPS IN ('0')

			    UPDATE #ControlOrdenesdeProduccionFinal
				SET imgMPDes = 'C:\Program Files\SAP\SAP Business One\AddOns\BasisOne\Basis One 10.2.0.35\X64Client\BOProduction\Images\imgMPDes.bmp'
				WHERE ReceivedQtyOPS != 0

		END
	ELSE
		BEGIN

		    UPDATE #ControlOrdenesdeProduccionFinalConFiltro
			SET DocNumOPT = NULL
			WHERE PosIdOPS NOT IN ('0')

			UPDATE #ControlOrdenesdeProduccionFinalConFiltro
			SET StatusOPS = NULL,
				DocEntryOPS = NULL,
				DocNumOPS = NULL,
				ItemCodeOPS = NULL,
				ItemNameOPS = NULL,
				WarehouseOPS = NULL,
				PlannedQtyOPS = NULL,
				ReceivedQtyOPS = NULL,
				QuantityCOLOROPS = NULL
			WHERE PosIdOPS IN ('0')

			UPDATE #ControlOrdenesdeProduccionFinalConFiltro
			SET imgMPDes = 'C:\Program Files\SAP\SAP Business One\AddOns\BasisOne\Basis One 10.2.0.35\X64Client\BOProduction\Images\imgMPDes.bmp'
			WHERE ReceivedQtyOPS != 0

		END


    ---------------------------------------- Consulta la orden de fabricación -------------------

		IF(@DocNumOPT = '')
			BEGIN

				SELECT * FROM #ControlOrdenesdeProduccionFinal

			END
		ELSE
			BEGIN
			
				SELECT * FROM #ControlOrdenesdeProduccionFinalConFiltro

			END

    END
  
  
  
  
  
  
  </ProcedureWorkOrder>

  <GetProductionRoute>

    DECLARE @iDocEntry NVARCHAR(100)

    SET @iDocEntry = (SELECT TOP 1 Code FROM [@BORPEN] WHERE Code = '%ItemCode%')

    SELECT ROW_NUMBER() OVER(ORDER BY T0.Code ASC) AS '#',
    'P. Terminado' AS 'Posicion',
    T0.Code AS ItemCode,
    T1.ItemName AS ItemName,
    CAST(100.000000 AS DECIMAL(19,2))  AS 'Quantity'


    FROM [@BORPEN] T0 LEFT JOIN OITM T1 ON T0.Code=t1.ItemCode
    WHERE T0.Code = @iDocEntry

    UNION ALL

    SELECT ROW_NUMBER() OVER(ORDER BY T0.Code ASC)+1 AS '#',
    'P. Semielaborado' AS 'Posicion',
    T0.U_BO_ItemCode AS ItemCode,
    T1.ItemName AS ItemName,
    CAST(100.000000 AS DECIMAL(19,2))  AS 'Quantity'

    from [@BORPLI] T0 LEFT JOIN OITM T1 ON T0.U_BO_ItemCode=t1.ItemCode
    where t0.Code = @iDocEntry


  </GetProductionRoute>

  <GetProductionRouteStructure>

    SELECT T0.Code AS 'Producto terminado',
		   T1.U_BO_ItemCode AS 'Producto semielaborado',
		   T3.Code AS 'Materia Prima',
		   T3.ItemName AS 'Descripcion Materia',
		   CAST(T3.Quantity AS DECIMAL(19,2)) AS 'Cantidad',
		   T3.Warehouse AS 'Almacen'

    FROM [dbo].[@BORPEN] T0 INNER JOIN [dbo].[@BORPLI] T1 ON T0.Code=T1.Code
    LEFT JOIN OITM T2 ON T1.U_BO_ItemCode=T2.ItemCode
    INNER JOIN ITT1 T3 ON T1.U_BO_ItemCode=T3.Father
    WHERE T0.Code LIKE '%ItemCode%'


  </GetProductionRouteStructure>

  <GetSNProduction>

    (SELECT TOP 1 U_BO_SNPT AS SNPT, U_BO_SNPS AS SNPS FROM [@BOPRODP])

  </GetSNProduction>

  <GetNextDocNum>
    SELECT ISNULL(MAX(DocNum),0)+1  AS Consecutivo FROM OWOR WHERE Series = (SELECT TOP 1 U_BO_SNPT FROM [@BOPRODP])

  </GetNextDocNum>
  
  <GetBatchNumber>
    SELECT T1.DistNumber, 
	       T0.Quantity, 
	       T1.MnfSerial 
    FROM OBTQ T0 INNER JOIN OBTN T1 ON T0.ItemCode=T1.ItemCode AND T0.SysNumber=T1.SysNumber
    WHERE T0.ItemCode = '%ItemCode%' AND T0.Quantity > 0 AND T0.WhsCode = '%WhsCode%'
</GetBatchNumber>
  
  <GetQuantityBatchNumber>
    SELECT T1.DistNumber, 
	       CAST(T0.Quantity AS DECIMAL(19,2)) AS 'Quantity', 
	       T1.MnfSerial 
    FROM OBTQ T0 INNER JOIN OBTN T1 ON T0.ItemCode=T1.ItemCode AND T0.SysNumber=T1.SysNumber
    WHERE T0.ItemCode = '%ItemCode%' AND T0.Quantity > 0 AND T0.WhsCode = '%WhsCode%' AND T1.DistNumber = '%DistNumber%'
</GetQuantityBatchNumber>

  <GetInfoGoodIssue>

    SELECT T0.DocEntry, T0.DocNum , T1.ItemCode, T1.Quantity, T1.StockPrice FROM OIGE T0 INNER JOIN IGE1 T1 ON T0.DocEntry=T1.DocEntry WHERE T0.DocEntry = '%DocEntry%'

  </GetInfoGoodIssue>

  <GetNextDocEntryTL>
    SELECT RIGHT('000000000' + Ltrim(Rtrim(COUNT(CODE)+1)),10) AS 'Consecutivo' FROM [@BOTL]
  </GetNextDocEntryTL>
  
  
</Queries>
